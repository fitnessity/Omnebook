name: Docker Test and Push

on:
  push:
    branches:
      - "**" # This will run the action on pushes to any branch

jobs:
  docker-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ghcr.io/fullstackwebdev/fitnessity/fitnessity:latest
            ghcr.io/fullstackwebdev/fitnessity/fitnessity:${{ github.sha }}
            ghcr.io/fullstackwebdev/fitnessity/fitnessity:${{ github.ref_slug }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max

      - name: Build and start Docker containers
        run: |
          docker-compose -f docker-compose.yml pull
          docker-compose -f docker-compose.yml up -d
          # Wait for the database to be ready
          until docker exec fitnessity_db_1 mysqladmin ping --host=db --password=your_mysql_root_password --silent; do
              echo "Waiting for database to be ready..."
              sleep 2
          done

      - name: Migrate Database
        env:
          DB_PASSWORD: your_laravel_db_password
          #${{ secrets.DB_PASSWORD }}
        run: |
          gzip -d fitnessity_dev.sql.gz
          docker exec -i fitnessity_app_1 mysql -h db -u laraveluser -p${DB_PASSWORD} laravel < fitnessity_dev.sql
          echo "Application is up and running!"

      - name: Stop Docker containers
        run: docker-compose -f docker-compose.yml down


      - name: Test completed successfully
        run: echo "Test completed successfully"
# name: Docker Test and Push

# on:
#   push:
#     branches:
#       - "**" # This will run the action on pushes to any branch

# jobs:
#   docker-test:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v2

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1

#       - name: Cache Docker layers
#         uses: satackey/action-docker-layer-caching@v0.0.11
#         continue-on-error: true

#       - name: Login to GitHub Container Registry
#         uses: docker/login-action@v1
#         with:
#           registry: ghcr.io
#           username: ${{ github.repository_owner }}
#           password: ${{ secrets.GITHUB_TOKEN }}

#       - name: Build and start Docker containers
#         run: |
#           docker-compose -f docker-compose.yml build
#           docker-compose -f docker-compose.yml up -d

#       - name: Migrate Database
#         run: |
#           gzip -d fitnessity_dev.sql.gz
#           docker exec -i fitnessity_app_1 mysql -u laraveluser -p laravel < fitnessity_dev.sql

#           echo "Application is up and running!"

#       - name: Stop Docker containers
#         run: docker-compose -f docker-compose.yml down

#       - name: Push Docker image to GitHub Container Registry
#         run: |
#           docker tag fitnessity:latest ghcr.io/${{ github.repository }}/fitnessity:${{ github.sha }}
#           docker push ghcr.io/${{ github.repository }}/fitnessity:${{ github.sha }}

#       - name: Test completed successfully
#         run: echo "Test completed successfully"
